meta:
  name: "phenomapping" # experiment name (i.e. file name in which to store merged data)
  target_label: ["LA_GLS_11.4"] # which column to use as label for exploration, feature reduction and analysis
  seed: [42] # random seed
  logging_level: "INFO" #: TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL
  state_name: "" # don't change this, will be set automatically by the pipeline
  learn_task: "" # don't change this, will be set automatically by the pipeline

inspection:
  label_as_index: "ID_Imaging" # column string name or None
  export_cleaned_frame: True # for visual inspection of the cleaned data
  clean_up_strategy:
    nan_data_type_outliers: True # mask data type outliers as nan, for example string in a numeric column
    nan_date_times: True
    nan_strings: True
    column_wise:
      replace:
        Gender:
          999: 1
          1: 0
          2: 1
          else: null
      allow_only:
        Age:
          allowed: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          else: null


impute:
  active: False # whether to impute missing values
  method: ["iterative_impute"] #: drop_nan_impute, iterative_impute, simple_impute, missing_indicator, knn_impute
  constant: 0 # constant to use for imputation if method is 'constant'

data_split:
  active: False # needs to be set to True for feature selection and verification
  selection_frac: 0.2  # fraction of data to use for feature selection
  verification_test_frac: 0.2 # fraction of data to use for testing
  over_sample_selection: True # oversample minority class to balance feature selection set
  over_sample_verification: True # oversample minority class to balance verification set
  over_sample_method:
    {
      "binary_classification": "RandomOverSampler",  #: RandomOverSampler, SMOTE, ADASYN
      "multi_classification": "RandomOverSampler",  #: RandomOverSampler, SMOTE, ADASYN
      "regression": "RandomOverSampler",  #: RandomOverSampler, SMOTE, ADASYN
    }

selection:
  active: False # whether to perform feature selections
  variance_thresh: 0.9 # remove binary features with same value in more than variance_thresh subjects
  corr_method: "pearson" # correlation method
  corr_thresh: 0.6 # threshold above which correlated features are removed
  corr_drop_features: True # whether to drop highly correlated features
  keep_top_features: 20 # keep n top features
  class_weight: "balanced"
  scoring:
    {
      "binary_classification": "average_precision",
      "multi_classification": "average_precision",
      "regression": "neg_mean_absolute_error",
    }

  auto_norm_method: # method for data type dependent normalization
    binary: "z_score_norm"
    continuous: "min_max_norm"
    object: "z_score_norm"
    datatime: "z_score_norm"

  jobs: [
      ["variance_threshold", "z_score_norm", 'fr_adaboost'],
    ] #: variance_threshold, umap, tsne, pca, z_score_norm, l1_norm, l2_norm, auto_norm

verification:
  active: False # whether to perform verification analysis
  models:
    {
      "logistic_regression": False,
      "forest": True,
      "extreme_forest": False,
    }
  param_grids:
    {
      "logistic_regression":
        {
          "penalty": ["l1", "l2"],
          "C": [0.0001, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000],
          "solver": ["saga"], # supports both l1 and l2 penalties
        },
      "forest":
        {
          "bootstrap": [True, False],
          "max_depth": [10, 50, 100, null],
          "max_features": ["sqrt", "log2", null],
          "n_estimators": [100, 500, 1000],
        },
    }
